
@model IEnumerable<TrashCollector.Models.ApplicationUser>

@{
    ViewBag.Title = "Employee Index";
}

<head runat="server">
    <!DOCTYPE html>
    <html>
    <head>
        <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
        <title>Google Maps Multiple Markers</title>
        <script src="http://maps.google.com/maps/api/js?key=@ViewBag.APIKey" ;
                type="text/javascript"></script>
    </head>
    <body>
        <div id="map" style="width: 500px; height: 400px;"></div>

        <script type="text/javascript">
            let marker, i;

            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 15,
                center: new google.maps.LatLng(44.768, -91.4502),
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });

            let geocoder = new google.maps.Geocoder();
            let address;

            @foreach(var model in Model)
            {
                @:address = @Html.Raw(Json.Encode(model.Address));
                @:geocoder.geocode({ 'address': address }, function (results, status) {
                    @:if (status == "OK") {
                        
                        @:marker = new google.maps.Marker({ map: map, position: results[0].geometry.location });
                    @:} else {
                        @:alert("Request failed: " + status);
                    @:}
                @:});
            }
            
            
        </script>
    </body>
</html>
</head>

<h2>Pickups By Day</h2>
<h3>Today is: @DateTime.Today.DayOfWeek.ToString()</h3>
<h5>Show results for: </h5>
<form method=post>
    <div class="form-group">
        @Html.RadioButton("id", "Monday", new { id = "Monday" })@Html.Label("Monday")
        @Html.RadioButton("id", "Tuesday", new { id = "Tuesday" })@Html.Label("Tuesday")
        @Html.RadioButton("id", "Wednesday", new { id = "Wednesday" })@Html.Label("Wednesday")
        @Html.RadioButton("id", "Thursday", new { id = "Thursday" })@Html.Label("Thursday")
        @Html.RadioButton("id", "Friday", new { id = "Friday" })@Html.Label("Friday")
        @Html.RadioButton("id", "Saturday", new { id = "Saturday" })@Html.Label("Saturday")
        @Html.RadioButton("id", "Sunday", new { id = "Sunday" })@Html.Label("Sunday")
    </div>
    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-default" />
    </div>
</form>



<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.State)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ZipCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PickupDay)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AmountOwed)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SpecialPickupDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SuspendPickupsFrom)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SuspendPickupsUntil)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Address)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.State)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ZipCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PickupDay)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AmountOwed)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SpecialPickupDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SuspendPickupsFrom)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SuspendPickupsUntil)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        <td>
            @Html.ActionLink("Details", "ConfirmPickup", new { id = item.Id })
        </td>
    </tr>
    }

</table>
